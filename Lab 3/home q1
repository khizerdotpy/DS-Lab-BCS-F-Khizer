#include <iostream>
using namespace std;

class Node {
public:
    int data;
    Node* next;
};

class LinkedList{
private:
    Node* head;
    Node* tail;
public:
    LinkedList(){
        head=nullptr;
        tail=nullptr;
    }

    void createList(int* a,int n){
        Node* temp=nullptr;
        temp=new Node;
        temp->data=a[0];
        temp->next=nullptr;
        if(head==nullptr){
            head=temp;
        }
        tail=head;
        for(int i=1;i<n;i++){
            temp= new Node;
            temp->data=a[i];
            temp->next=nullptr;
            tail->next=temp;
            tail=temp;
        }
        
    }

    void display(){
        Node* p=head;
        while(p!=nullptr){
            cout<<p->data<<"->";
            p=p->next;
        }
        cout<<"NULL";
    }
    
    bool isPalindrome(){

        Node* slow=head;
        Node* fast=head;
        while(fast!=nullptr && fast->next!=nullptr){
            slow=slow->next;
            fast=fast->next->next;
        }

        Node* p=slow;
        Node* q=nullptr;
        Node* r=nullptr;
        while(p!=nullptr){
            r=q;
            q=p;
            p=p->next;
            q->next=r;
        }
        slow=q;
        p=head;

        while(slow!=nullptr){
            if(p->data==slow->data){
                p=p->next;
                slow=slow->next;
            } else {
                return false;
            }
        }
        return true;
        
        
    }


};

int main() {
    LinkedList l1;

    int r;
    int* arr;
    cout<<"Enter number of elements of linked list: ";
    cin>>r;
    arr=new int[r];

    for(int i=0;i<r;i++){
        cout<<"Enter element "<<i+1<<": ";
        cin>>arr[i];
    }
    

    l1.createList(arr, r);
    l1.display();
    cout << endl;

    if (l1.isPalindrome())
        cout << "\nThe linked list is a palindrome.\n";
    else
        cout << "\nThe linked list is NOT a palindrome.\n";

    return 0;
}
