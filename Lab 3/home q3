#include <iostream>
using namespace std;

class Node {
public:
    int data;
    Node* next;
};

class LinkedList{
private:
    Node* head;
    Node* tail;
public:
    LinkedList(){
        head=nullptr;
        tail=nullptr;
    }

    void createList(int* a,int n){
        Node* temp=nullptr;
        temp=new Node;
        temp->data=a[0];
        temp->next=nullptr;
        if(head==nullptr){
            head=temp;
        }
        tail=head;
        for(int i=1;i<n;i++){
            temp= new Node;
            temp->data=a[i];
            temp->next=nullptr;
            tail->next=temp;
            tail=temp;
        }
        
    }

    void display(){
        Node* p=head;
        while(p!=nullptr){
            cout<<p->data<<"->";
            p=p->next;
        }
        cout<<"NULL";
    }

    Node* getKthgroup(Node* curr,int k){
        while(curr!=nullptr && k>0){
            curr=curr->next;
            k--;
        }
        return curr;
    }

    void reverseKgroup(int k){
        Node* temp=head;
        Node* groupPrev=temp;
        while(1){
            Node* kth = getKthgroup(groupPrev,k);
            if(kth==nullptr){
                break;
            }
            Node* groupNext=kth->next;
            Node* prev=kth->next;
            Node* curr=groupPrev->next;

            while (curr!=groupNext){
                Node* t =curr->next;
                curr->next=prev;
                prev=curr;
                curr=t;
            }

            Node* temp2=groupPrev->next;
            groupPrev->next =kth;
            groupPrev = temp2;

        }

    }


};

int main() {
    LinkedList l1;

    int r;
    int* arr;
    cout<<"Enter number of elements of linked list: ";
    cin>>r;
    arr=new int[r];

    for(int i=0;i<r;i++){
        cout<<"Enter element "<<i+1<<": ";
        cin>>arr[i];
    }
    

    l1.createList(arr, r);
    l1.display();
    cout << endl;

    l1.reverseKgroup(3);
    l1.display();
    cout << endl;
}
